[metadata]
name = synospec
description = Synthetic Observatory Spectra
long_description = file: README.md
long_description_content_type = text/markdown
author = Kyle B. Westfall
author_email = westfall@ucolick.org
license = BSD-3
url = https://github.com/kbwestfall/synospec
edit_on_github = False
github_project = kbwestfall/synospec
keywords = astronomy, spectroscopy, instrumentation, spectrograph
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.7
    Topic :: Documentation :: Sphinx
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: User Interfaces

[options]
zip_safe = False
use_2to3 = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
include_package_data = True
install_requires =
    IPython>=7.26
    numpy>=1.21
    scipy>=1.7
    matplotlib>=3.4
    astropy>=4.3
    extension-helpers>=0.1
    pydl>=0.7
    shapely==1.7.0

[options.extras_require]
test =
    pytest>=6.2
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
docs =
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme
dev =
    pytest>=6.2
    pytest-astropy
    tox
    pytest-cov
    coverage
    codecov
    sphinx
    sphinx-automodapi
    sphinx_rtd_theme

[options.package_data]
* = *.md, data/*, data/*/*

[options.entry_points]
console_scripts =
    fobos_etc_grid = synospec.scripts.fobos_etc_grid:FOBOSETCGrid.entry_point
    fobos_etc = synospec.scripts.fobos_etc:FOBOSETC.entry_point
    imaging_etc = synospec.scripts.imaging_etc:ImagingETC.entry_point
    wfos_etc = synospec.scripts.wfos_etc:WFOSETC.entry_point

[tool:pytest]
testpaths = 'synospec/tests'

[coverage:run]
omit =
    synospec/tests/*
    synospec/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


